name: Elixir CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # https://github.com/elixir-lang/elixir/releases
        # http://erlang.org/download/otp_versions_tree.html
        # https://hexdocs.pm/elixir/compatibility-and-deprecations.html
        include:
          - elixir: "1.9.4"
            erlang: "24.x"
          - elixir: "1.14.5"
            erlang: "25.x"
          - elixir: "1.15.8"
            erlang: "26.x"
          - elixir: "1.16.3"
            erlang: "26.x"
          - elixir: "1.17.3"
            erlang: "27.x"
          - elixir: "1.18.4"
            erlang: "27.x"

    steps:
    - uses: actions/checkout@v3

    - uses: erlef/setup-beam@v1
      with:
        otp-version: ${{matrix.erlang}}
        elixir-version: ${{matrix.elixir}}

    - name: Install dependencies
      run: |-
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: Run tests
      run: mix test

  format:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # https://github.com/elixir-lang/elixir/releases
        elixir: ["1.14.1"]
        # http://erlang.org/download/otp_versions_tree.html
        erlang: ["25.1.1"]

    steps:
    - uses: actions/checkout@v3

    - uses: erlef/setup-beam@v1
      with:
        otp-version: ${{matrix.erlang}}
        elixir-version: ${{matrix.elixir}}

    - name: Install dependencies
      run: |-
        mix local.rebar --force
        mix local.hex --force
        mix deps.get --only test

    - name: Check format
      run: mix format --check-formatted

    - name: Run tests
      run: mix test

  dialyzer:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        elixir: ["1.14.1"]
        erlang: ["25.1.1"]

    env:
      MIX_ENV: "test"

    steps:
    - uses: actions/checkout@v3

    - uses: erlef/setup-beam@v1
      with:
        otp-version: ${{matrix.erlang}}
        elixir-version: ${{matrix.elixir}}

    - name: Install dependencies
      run: |-
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: Retrieve PLT Cache
      uses: actions/cache@v3
      id: plt-cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ matrix.erlang }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
    
    - name: Create PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt
    
    - name: Compile
      run: mix compile
    
    - name: Run dialyzer
      run: mix dialyzer --no-check --format github
